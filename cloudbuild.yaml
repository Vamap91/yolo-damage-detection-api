steps:
  # Build da imagem Docker
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/yolo-damage-detection:$BUILD_ID',
      '-t', 'gcr.io/$PROJECT_ID/yolo-damage-detection:latest',
      '.'
    ]
    timeout: '1800s'  # 30 minutos para o build

  # Push da imagem para Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/yolo-damage-detection:$BUILD_ID']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/yolo-damage-detection:latest']

  # Deploy para Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', 'yolo-damage-detection',
      '--image', 'gcr.io/$PROJECT_ID/yolo-damage-detection:$BUILD_ID',
      '--region', 'us-central1',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--memory', '4Gi',
      '--cpu', '2',
      '--timeout', '900',
      '--max-instances', '10',
      '--concurrency', '80'
    ]

# Configurações do build
options:
  machineType: 'E2_HIGHCPU_8'  # Máquina mais potente para o build
  diskSizeGb: '100'
  logging: CLOUD_LOGGING_ONLY

# Timeout total do build
timeout: '3600s'  # 1 hora

# Imagens a serem armazenadas
images:
  - 'gcr.io/$PROJECT_ID/yolo-damage-detection:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/yolo-damage-detection:latest'
